// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	model "accounts/internal/server/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// AccountsRepo is an autogenerated mock type for the Accounts type
type AccountsRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *AccountsRepo) Create(_a0 context.Context, _a1 *model.Account) (*model.Account, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.Account
	if rf, ok := ret.Get(0).(func(context.Context, *model.Account) *model.Account); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.Account) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: _a0, _a1
func (_m *AccountsRepo) GetById(_a0 context.Context, _a1 int32) (*model.Account, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.Account
	if rf, ok := ret.Get(0).(func(context.Context, int32) *model.Account); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int32) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0, _a1
func (_m *AccountsRepo) Update(_a0 context.Context, _a1 *model.Account) (*model.Account, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.Account
	if rf, ok := ret.Get(0).(func(context.Context, *model.Account) *model.Account); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Account)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.Account) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
